{"version":3,"names":["BlobResponseType"],"sources":["ExposedTypes.tsx"],"sourcesContent":["/**\n * Copyright (c) Ely Deckers.\n *\n * This source code is licensed under the MPL-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport declare interface BlobRequestHeaders {\n  readonly headers?: { [key: string]: string };\n}\n\nexport declare interface BlobRequestMethod {\n  readonly method?: string;\n}\n\nexport declare interface BlobRequestMimeType {\n  readonly mimeType: string;\n}\n\nexport declare interface BlobRequestReturnResponse {\n  readonly returnResponse?: boolean;\n}\n\nexport declare interface BlobRequestOnProgress {\n  readonly onProgress?: (e: BlobProgressEvent) => void;\n}\n\nexport declare interface BlobRequestUrl {\n  readonly url: string;\n}\n\nexport declare interface BlobBaseRequest\n  extends BlobRequestHeaders,\n    BlobRequestOnProgress,\n    BlobRequestUrl {}\n\nexport declare interface BlobFetchRequest\n  extends BlobBaseRequest,\n    BlobRequestMimeType,\n    BlobRequestMethod,\n    AndroidFetchSettings,\n    IOSFetchSettings {\n  readonly filename: string;\n}\n\nexport declare interface AndroidDownloadManagerToggle {\n  readonly useDownloadManager?: boolean;\n}\n\nexport declare interface AndroidDownloadManagerSettings {\n  readonly description?: string;\n  readonly enableNotifications?: boolean;\n  readonly title?: string;\n}\n\nexport declare interface AndroidDownloadManager {\n  readonly downloadManager?: AndroidDownloadManagerSettings;\n}\n\nexport type TargetType = 'cache' | 'data';\nexport declare interface TargetSettings {\n  target?: TargetType;\n}\nexport declare interface AndroidFetchSettings {\n  readonly android?: AndroidDownloadManagerToggle &\n    AndroidDownloadManager &\n    TargetSettings;\n}\n\nexport declare interface IOSFetchSettings {\n  readonly ios?: TargetSettings;\n}\n\nexport declare interface BlobProgressEvent {\n  readonly total: number;\n  readonly written: number;\n}\n\nexport declare type BlobMultipartFormData = string | { [key: string]: any };\nexport declare type BlobMultipartType = 'file' | 'string';\nexport declare type BlobMultipart = {\n  payload: BlobMultipartFormData | BlobMultipartFormDataFile;\n  type: BlobMultipartType;\n};\n\nexport declare type BlobMultipartWithName = BlobMultipart & {\n  name: string;\n};\n\nexport declare type BlobNamedMultipartArray = BlobMultipartWithName[];\n\nexport declare interface BlobMultipartFormDataFile {\n  readonly absoluteFilePath: string;\n  readonly filename?: string;\n  readonly mimeType: string;\n}\n\nexport declare interface BlobUploadRequest\n  extends BlobBaseRequest,\n    BlobRequestMimeType,\n    BlobRequestMethod,\n    BlobRequestReturnResponse {\n  readonly absoluteFilePath: string;\n  readonly filename?: string;\n  readonly multipartName?: string;\n}\n\nexport declare interface BlobMultipartBaseRequest\n  extends BlobBaseRequest,\n    BlobRequestMethod,\n    BlobRequestReturnResponse {}\n\nexport declare interface BlobMultipartArrayUploadRequest\n  extends BlobMultipartBaseRequest {\n  readonly parts: BlobNamedMultipartArray;\n}\n\nexport declare interface BlobMultipartMapUploadRequest\n  extends BlobMultipartBaseRequest {\n  readonly parts: { [key: string]: BlobMultipart };\n}\n\nexport declare interface BlobRequestTask {\n  readonly taskId: string;\n}\n\nexport declare interface BlobRequestSettings {\n  readonly progressIntervalMilliseconds?: number;\n  readonly signal?: AbortSignal;\n}\n\nexport declare interface BlobUnmanagedHttpResponse {\n  readonly headers: { [key: string]: string };\n  readonly code: number;\n}\n\nexport declare interface BlobFilePathData {\n  readonly absoluteFilePath: string;\n}\n\nexport declare interface BlobManagedData extends BlobFilePathData {\n  readonly result: string;\n}\n\nexport declare interface BlobUnmanagedData extends BlobFilePathData {\n  readonly response: BlobUnmanagedHttpResponse;\n}\n\nexport enum BlobResponseType {\n  Managed,\n  Unmanaged,\n}\n\nexport declare interface BlobFetchResponse {\n  readonly type: BlobResponseType;\n  readonly data: BlobUnmanagedData | BlobManagedData;\n}\n\nexport declare interface BlobUploadResponse extends BlobUnmanagedData {}\n\nexport type BlobFetchInput = BlobFetchRequest &\n  BlobRequestSettings &\n  AndroidFetchSettings &\n  IOSFetchSettings;\n\nexport type BlobUploadInput = BlobUploadRequest & BlobRequestSettings;\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;IA8IYA,gB;;;WAAAA,gB;EAAAA,gB,CAAAA,gB;EAAAA,gB,CAAAA,gB;GAAAA,gB,gCAAAA,gB"}